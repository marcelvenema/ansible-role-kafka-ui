---

#########################################################
## Kafka UI install action                             ##
#########################################################

#########################################################
## Pre-installation uninstall                          ##
#########################################################

# Run uninstall if uninstall is set
- name: Run uninstall playbook if set
  ansible.builtin.include_tasks: uninstall.yml
  ignore_errors: true
  when: kafka_ui_vars.container.uninstall == true

#########################################################
## Installation on podman                              ##
#########################################################

- name: Install container on Podman...
  when: kafka_ui_vars.container.platform == "podman"
  block:

    # Gather installed packages
    - name: Gather installed packages
      ansible.builtin.package_facts:
        manager: auto

    # Check if podman is detected
    - name: Check if podman is detected
      ansible.builtin.assert:
        that: '"podman" in ansible_facts.packages'
        fail_msg: "Podman is not installed. Please install Podman first. Cannot continue..."

    #####################################################
    ## Volume configuration                            ##
    #####################################################

    # Create volumes
    - name: Create configuration folders...
      ansible.builtin.include_role:
        name: podman
      vars:
        action: create_volumes
        container_volumes: "{{ kafka_ui_vars.container.volumes }}"

    #####################################################
    ## Firewall configuration                          ##
    #####################################################

    # Open firewall ports
    - name: Open firewall ports...
      become: true
      ansible.builtin.firewalld:
        port: "{{ kafka_ui_vars.container.ports[0].split(':')[0] }}/tcp"
        permanent: true
        state: enabled
        immediate: true

    #####################################################
    ## Import container                                ##
    #####################################################

    # Import container
    - name: "Install {{ kafka_ui_vars.container.name }} container on podman"
      ansible.builtin.include_role:
        name: podman
      vars:
        action: import_container
        container_name: "{{ kafka_ui_vars.container.name }}"
        container_repository_url: "{{ kafka_ui_vars.container.repository_url }}"
        container_repository_tag: "{{ kafka_ui_vars.container.repository_tag | default('latest') }}"
        container_repository_checksum: "{{ kafka_ui_vars.container.repository_checksum | default(omit) }}"
        container_repository_checksum_algorithm: "{{ kafka_ui_vars.container.repository_checksum_algorithm | default(omit) }}"
        container_ports: "{{ kafka_ui_vars.container.ports }}"
        container_volumes: "{{ kafka_ui_vars.container.volumes }}"
        container_env: "{{ kafka_ui_vars.container.env | default({}) }}"
        container_healthcheck: "{{ kafka_ui_vars.container.healthcheck | default(omit) }}"
        container_healthcheck_fail: "{{ kafka_ui_vars.container.healthcheck_fail | default('none') }}"
        container_healthcheck_retries: "{{ kafka_ui_vars.container.healthcheck_retries | default(omit) }}"
        container_healthcheck_interval: "{{ kafka_ui_vars.container.healthcheck_interval | default(omit) }}"
        container_healthcheck_timeout: "{{ kafka_ui_vars.container.healthcheck_timeout | default(omit) }}"
        container_healthcheck_start: "{{ kafka_ui_vars.container.healthcheck_start | default(omit) }}"

#########################################################
## Installation via kubernetes                         ##
#########################################################

- name: Install container on Kubernetes...
  when: kafka_ui_vars.container.platform == "kubernetes"
  block:

    # Debug message
    - name: Debug message
      ansible.builtin.debug:
        msg: "Install application via kubernetes"

    # Show information message
    - name: This part is not (yet) implemented.
      ansible.builtin.debug:
        msg: "This part is not (yet) implemented."

    # Stop playbook
    - name: Stop playbook
      ansible.builtin.meta: end_play

#########################################################
## Installation on host                                ##
#########################################################

- name: Install application on host...
  when: kafka_ui_vars.container.platform == "host"
  block:

    # Debug message
    - name: Debug message
      ansible.builtin.debug:
        msg: "Install application on host"

    # Show information message
    - name: This part is not (yet) implemented.
      ansible.builtin.debug:
        msg: "This part is not (yet) implemented."

    # Stop playbook
    - name: Stop playbook
      ansible.builtin.meta: end_play

#########################################################
## Configuration                                       ##
#########################################################

# Configure application
- name: Start configure task...
  ansible.builtin.include_tasks: configure.yml

#########################################################
## Post-install                                        ##
#########################################################

# Unset variables
#- name: Unset variables...
#  ansible.builtin.set_fact:
